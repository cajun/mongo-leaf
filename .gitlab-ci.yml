variables:
  BUILD_IMAGE: $CI_REGISTRY_IMAGE/build:$CI_COMMIT_REF_SLUG
  NIGHTLY_IMAGE: $CI_REGISTRY_IMAGE/nightly:$CI_COMMIT_REF_SLUG

stages:
  - build
  - clippy
  - inittest
  - test

services:
  - name: mongo:latest
    alias: standard
    command:
      ["mongod", "--storageEngine", "ephemeralForTest", "--dbpath", "/data/db"]
  - name: mongo:latest
    alias: repl
    command:
      [
        "mongod",
        "--replSet",
        "rs0",
        "--enableMajorityReadConcern",
        "--storageEngine",
        "ephemeralForTest",
        "--dbpath",
        "/data/db",
      ]

docker-build-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$BUILD_IMAGE" .
    - docker push "$BUILD_IMAGE"
  only:
    - master

docker-build-nightly:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$NIGHTLY_IMAGE" -f Dockerfile.nightly .
    - docker push "$NIGHTLY_IMAGE"
  only:
    - master

clippy:
  stage: clippy
  image: $BUILD_IMAGE
  before_script:
    - rustc --version
  script:
    - cargo clippy

init-db-for-test:
  stage: inittest
  image: mongo:latest
  script:
    - mongo --host repl --eval 'rs.initiate();'

test:
  stage: test
  image: $BUILD_IMAGE
  before_script:
    - rustc --version
  script:
    - cargo test --all --verbose

test_nightly:
  stage: test
  image: $NIGHTLY_IMAGE
  before_script:
    - rustc --version
  script:
    - cargo test --all --verbose
